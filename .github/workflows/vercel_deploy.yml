name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x # or your preferred version

      - name: Install Dependencies
        run: npm install # or yarn install

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Project Settings
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Configure Firebase
        env:
          FB_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FB_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FB_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FB_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FB_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FB_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FB_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
        run: |
          echo "Configuring Firebase in src/analytics/firebase.ts..."
          # Create the directory if it doesn't exist
          mkdir -p src/analytics
          # Write the firebase.ts file
          cat <<EOF > src/analytics/firebase.ts
// This file is automatically generated by GitHub Actions during the build process.
// Do not edit it manually, as your changes will be overwritten.
import { initializeApp } from "firebase/app";
// import { getAnalytics } from "firebase/analytics"; // Uncomment if you use analytics

const firebaseConfig = {
  apiKey: "${{ env.FB_API_KEY }}",
  authDomain: "${{ env.FB_AUTH_DOMAIN }}",
  projectId: "${{ env.FB_PROJECT_ID }}",
  storageBucket: "${{ env.FB_STORAGE_BUCKET }}",
  messagingSenderId: "${{ env.FB_MESSAGING_SENDER_ID }}",
  appId: "${{ env.FB_APP_ID }}",
  measurementId: "${{ env.FB_MEASUREMENT_ID }}",
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
// const analytics = getAnalytics(app); // Uncomment if you use analytics

export default app; // Or export { app, analytics };
EOF
          echo "src/analytics/firebase.ts configured successfully."

      - name: Build Project
        run: npm run build # Or your project's build command
        env:
          # If your build step needs Firebase Admin SDK (e.g. for Next.js API routes during build)
          # and you created a service account file like 'firebase-service-account.json' (ensure name matches):
          # GOOGLE_APPLICATION_CREDENTIALS: ./firebase-service-account.json

          # If using client-side Firebase config via .env.local (as created above):
          # Next.js automatically loads .env.local during build.
          # Ensure your Firebase initialization code reads these NEXT_PUBLIC_ variables.
          CI: false # Common practice for some build tools in CI

      - name: Deploy Project to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
